use crate::pre_processor::MasterData;
use rbdate::NaiveDate;
use std::collections::HashMap;

pub fn get_op_line(
    as_on_date: NaiveDate,
    rec: Vec<&str>,
    master_data: &mut HashMap<String, MasterData>,
) -> String {
    let concat = format!("{}{}{}{}", rec[31], rec[19], rec[21], rec[8]);
    format!("{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}\n",
        &rec[0],
        &rec[1],
        &rec[2],
        &rec[3],
        &rec[4],
        &rec[5],
        &rec[6],
        &rec[7],
        &rec[8],
        &rec[9],
        &rec[10],
        &rec[11],
        &rec[12],
        &rec[13],
        &rec[14],
        &rec[15],
        &rec[16],
        &rec[17],
        &rec[18],
        &rec[19],
        &rec[20],
        &rec[21],
        &rec[22],
        &rec[23],
        &rec[24],
        &rec[25],
        &rec[26],
        &rec[27],
        &rec[28],
        &rec[29],
        &rec[30],
        &rec[31],
        &as_on_date.format("%d-%m-%Y").to_string(),
        "0.0",
        "0.0",
        "0.0",
        "0.0",
        &as_on_date.format("%d-%m-%Y").to_string(),
        &as_on_date.format("%d-%m-%Y").to_string(),
        concat,
        master_data.get(&concat).unwrap_or(&MasterData::def()).vs_param,
        master_data.get(&concat).unwrap_or(&MasterData::def()).vg_param,
        "NA",
    )
}
