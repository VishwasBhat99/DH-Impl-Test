#[derive(Debug, Serialize, Deserialize, Default)]
pub struct InputAccount {
    pub reval_dt: String,
    pub deal_type: String,
    pub deal_ref: String,
    pub leg_id: String,
    pub portfolio: String,
    pub product: String,
    pub counter_party: String,
    pub buy_sell: String,
    pub deal_dt: String,
    pub val_dt: String,
    pub ccy_1: String,
    pub ccy_2: String,
    pub deal_rt: String,
    pub ccy1_amt: String,
    pub crnct2_amt: String,
    pub reval_rt: String,
    pub reval_eqv: String,
    pub actual_pl: String,
    pub pnl_conversion_rt: String,
    pub int_rt: String,
    pub discounted_factor: String,
    pub present_val_pl: String,
    pub ccy1_spot_rt: String,
    pub ccy2_spot_rt: String,
    pub inr_eq_ccy1_spot_rt: String,
    pub inr_eq_ccy2_spot_rt: String,
    pub branch_code: String,
    pub trsy_gl: String,
    pub cf_typ: String,
    pub cf_amt: String,
    pub cf_ccy: String,
    pub cf_dt: String,
}

impl InputAccount {
    pub fn print(&self) -> String {
        format!(
            "{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|{}|",
            self.reval_dt,
            self.deal_type,
            self.deal_ref,
            self.leg_id,
            self.portfolio,
            self.product,
            self.counter_party,
            self.buy_sell,
            self.deal_dt,
            self.val_dt,
            self.ccy_1,
            self.ccy_2,
            self.deal_rt,
            self.ccy1_amt,
            self.crnct2_amt,
            self.reval_rt,
            self.reval_eqv,
            self.actual_pl,
            self.pnl_conversion_rt,
            self.int_rt,
            self.discounted_factor,
            self.present_val_pl,
            self.ccy1_spot_rt,
            self.ccy2_spot_rt,
            self.inr_eq_ccy1_spot_rt,
            self.inr_eq_ccy2_spot_rt,
            self.branch_code,
            self.trsy_gl,
            self.cf_dt,
            self.cf_ccy,
            self.cf_amt,
            self.cf_typ,
        )
    }
}
